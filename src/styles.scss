/* You can add global styles to this file, and also import other style files */

@use "@angular/material" as mat;
@include mat.core();

$my-app-primary: mat.define-palette(mat.$indigo-palette);
$my-app-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);
$my-app-warn: mat.define-palette(mat.$red-palette);

$my-app-theme: mat.define-light-theme(
  (
    color: (
      primary: $my-app-primary,
      accent: $my-app-accent,
      warn: $my-app-warn,
    ),
  )
);

@include mat.all-component-themes($my-app-theme);

:root {
  --logo-background-color: #f9eabc;
  --logo-border-color: #e87a76;
  --logo-drop-shadow-color: #88b099;
}

html,
body {
  padding: 0;
  margin: 0;
  font-family: "roboto", sans-serif;
  min-height: 100%;
  position: relative;
}

.border-gradient {
  border-image-slice: 1;
  border-width: 5px;
  border-image-source: linear-gradient(
    to left,
    var(--logo-border-color),
    var(--logo-background-color),
    var(--logo-border-color)
  );
}

// dark theme adjustments

.dark-theme a {
  color: #fff;
}

.dark-theme section.search-container {
  background: #303030 !important;
}

.dark-theme input {
  color: #ffffff !important;
}

.dark-theme .algolia-credits {
  filter: brightness(3);
}

///////////////////////
// View Transitions
///////////////////////

// search results
html::view-transition-new(search-result) {
  animation: 100ms cubic-bezier(0.68, -0.55, 0.265, 1.55) both
    search-result-animation-in;
}
@keyframes search-result-animation-in {
  to {
    transform: translateY(100px);
  }
}

html::view-transition-old(search-result) {
  display: none;
  animation: 100ms cubic-bezier(0.68, -0.55, 0.265, 1.55) both
    search-result-animation-out;
}
@keyframes search-result-animation-out {
  to {
    transform: translateY(-100%);
  }
}

// navigation back button
html::view-transition-new(navigation-back) {
  animation: 300ms cubic-bezier(0.85, 0, 0.44, 0.56) both
    navigation-back-animation-in;
  animation-delay: 500ms;
  opacity: 0;
}
@keyframes navigation-back-animation-in {
  from {
    transform: translateX(-10px);
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

html::view-transition-old(navigation-back) {
  animation: 300ms linear both navigation-back-animation-out;
}
@keyframes navigation-back-animation-out {
  from {
    transform: translateX(0);
  }
  40% {
    transform: translateX(5px);
  }
  to {
    transform: translateX(-10px);
  }
}

// details page
html::view-transition-new(package-details-card):only-child {
  animation: 300ms cubic-bezier(0.68, -0.55, 0.265, 1.55) both
    package-details-card-animation-in;
  z-index: 10;
}
@keyframes package-details-card-animation-in {
  from {
    transform: translateY(500px);
  }
}

html::view-transition-old(package-details-card) {
  animation: 500ms cubic-bezier(0.68, -0.55, 0.265, 1.55) both
    package-details-card-animation-out;
}
@keyframes package-details-card-animation-out {
  to {
    transform: translateY(1000px);
  }
  30% {
    display: none;
  }
}

html::view-transition-new(package-details-readme) {
  animation: 500ms cubic-bezier(0.68, -0.55, 0.265, 1.55) both
    package-details-readme-animation-in;
}
@keyframes package-details-readme-animation-in {
  from {
    transform: translateY(400px);
  }
}

html::view-transition-old(package-details-readme) {
  animation: 500ms cubic-bezier(0.68, -0.55, 0.265, 1.55) both
    package-details-readme-animation-out;
}
@keyframes package-details-readme-animation-out {
  to {
    transform: translateY(500px);
  }
}

// Search container and filters
html::view-transition-old(search-container),
html::view-transition-old(search-filters) {
  animation-delay: 58ms;
}
html::view-transition-new(search-container),
html::view-transition-new(search-filters) {
  animation-delay: 221ms;
}

// header and footer
html::view-transition-new(main-header) {
  animation: 300ms cubic-bezier(0.68, -0.55, 0.265, 1.55) both
    main-header-animation-in;
    animation-delay: 100ms;
}
@keyframes main-header-animation-in {
  50% {
    transform: translateY(-10px);
  }
}
